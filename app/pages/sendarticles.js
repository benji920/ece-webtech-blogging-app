import { useState, useContext, useEffect } from "react";
import { useSupabaseClient } from "@supabase/auth-helpers-react";
import Head from "next/head";
import UserContext from "../components/UserContext";
import Layout from "../components/Layout.js";
import { useRouter } from "next/router";

export default function Contact() {
  const { user, logout, loading } = useContext(UserContext);
  const router = useRouter();
  const supabase = useSupabaseClient();
  const [message, setMessage] = useState(null);
  const [button, setButton] = useState();
  const onSubmit = async function (e) {
    e.preventDefault();
    const data = new FormData(e.target);
    let obj = Object.fromEntries(data);
    user ? ((obj.id = user.id), (obj.author = user.email)) : <></>;
    button ? (obj.posted = true) : (obj.posted = false);

    console.log(obj);

    function onClick() {}

    const { error } = await supabase
      .from("articles")
      .insert(obj, { returning: "minimal" });

    if (error) {
      console.log(error);
      if (error.code == "42501") {
        setMessage("You must be connected to write an article");
      } else {
        setMessage("Sorry, an unexpected error occured.");
      }
    } else {
      const timer = setTimeout(() => {
        router.push("/articles");
      }, 2000);
      setMessage(
        <div>
          <h2 className="text-center mt-3">Confirmation</h2>
          <p>Your article has been {true ? <>publsih</> : <>save</>}</p>

          <p>redirecting...</p>
        </div>
      );
    }
  };
  return (
    <Layout>
      <Head>
        <title>WebTech - send articles</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <p className="text-2xl text-center mb-5 p-2 border-b-2">
        Send an article
      </p>
      <div className="flex items-center justify-center h-screen">
        <form
          className="w-full max-w-sm h-screen palce-items-center"
          onSubmit={onSubmit}
        >
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label className="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
                Title
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                type="text"
                name="title"
                className="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-color500"
              />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label className="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
                Content
              </label>
            </div>
            <div class="md:w-2/3">
              <textarea
                type="text"
                name="content"
                className="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-color500"
                placeholder="Write your thoughts here..."
                rows="4"
              />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label className="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
                First categorie
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                type="text"
                name="categorie1"
                className="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-color500"
              />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label className="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
                Second categorie
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                type="text"
                name="categorie2"
                className="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-color500"
              />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label className="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
                First tag
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                type="text"
                name="tag1"
                className="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-color500"
              />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label className="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4">
                Second tag
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                type="text"
                name="tag2"
                className="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-color500"
              />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3"></div>
            <div class="md:w-2/3">
              <div className="flex">
                <span className="inline-flex ">
                  <button
                    name="btn1"
                    onClick={() => setButton(false)}
                    className=" rounded py-1 px-3 text-white bg-slate-500 hover:bg-blue-500"
                  >
                    Save
                  </button>
                </span>
                <span className="inline-flex ml-10">
                  <button
                    name="btn2"
                    onClick={() => setButton(true)}
                    className=" rounded py-1 px-3 text-white bg-slate-500 hover:bg-blue-500"
                  >
                    Publish
                  </button>
                </span>
              </div>
            </div>
          </div>
        </form>
      </div>

      {message && (
        <div
          aria-label="Overlow below the drawer dialog"
          className="fixed inset-0 bg-black/80 flex items-center justify-center"
          onClick={() => setMessage(null)}
          role="dialog"
        >
          <div
            aria-label="Alert pane"
            className="max-h-[90vh] max-w-[95vw] overflow-auto p-4 prose bg-white"
          >
            {message}
          </div>
        </div>
      )}
    </Layout>
  );
}
